#!/usr/bin/env python
# coding: utf-8

# <div class="alert alert-info">
# –ü—Ä–∏–≤–µ—Ç, –ê—Ä—Ç–µ–º! –ú–µ–Ω—è –∑–æ–≤—É—Ç –°–≤–µ—Ç–ª–∞–Ω–∞ –ß–∏—Ö –∏ —è –±—É–¥—É –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–≤–æ–π –ø—Ä–æ–µ–∫—Ç. –ú–æ—è –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –Ω–µ —É–∫–∞–∑–∞—Ç—å –Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç–æ–±–æ—é –æ—à–∏–±–∫–∏, –∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º –∏ –ø–æ–º–æ—á—å —Ç–µ–±–µ. –ü—Ä–µ–¥–ª–∞–≥–∞—é –æ–±—â–∞—Ç—å—Å—è –Ω–∞ ¬´—Ç—ã¬ª. –ù–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —É–¥–æ–±–Ω–æ - –¥–∞–π –∑–Ω–∞—Ç—å, –∏ –º—ã –ø–µ—Ä–µ–π–¥–µ–º –Ω–∞ ¬´–≤—ã¬ª.
# 
# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –ó–µ–ª—ë–Ω—ã–º —Ü–≤–µ—Ç–æ–º –æ—Ç–º–µ—á–µ–Ω—ã —É–¥–∞—á–Ω—ã–µ –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –æ–ø–∏—Ä–∞—Ç—å—Å—è –≤ –±—É–¥—É—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.
# </div>
# <div class="alert alert-warning">
# <b>ü§î –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –ñ—ë–ª—Ç—ã–º —Ü–≤–µ—Ç–æ–º –≤—ã–¥–µ–ª–µ–Ω–æ —Ç–æ, —á—Ç–æ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É. –¢—ã –º–æ–∂–µ—à—å —É—á–µ—Å—Ç—å —ç—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –±—É–¥—É—â–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∏–ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–µ–∫—Ç —Å–µ–π—á–∞—Å (–æ–¥–Ω–∞–∫–æ —ç—Ç–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ).
# </div>
# <div class="alert alert-danger">
# <b>üòî –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:</b> –ö—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º –≤—ã–¥–µ–ª–µ–Ω—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö, —è –Ω–µ —Å–º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–æ–µ–∫—Ç :(
# </div>
# <div class="alert alert-info">
# <b>üëÇ –°–æ–≤–µ—Ç:</b> –ö–∞–∫–∏–µ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
# </div>
# –î–∞–≤–∞–π —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º –≤ –¥–∏–∞–ª–æ–≥–µ: –µ—Å–ª–∏ —Ç—ã —á—Ç–æ-—Ç–æ –º–µ–Ω—è–µ—à—å –≤ –ø—Ä–æ–µ–∫—Ç–µ –ø–æ –º–æ–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º ‚Äî –ø–∏—à–∏ –æ–± —ç—Ç–æ–º.
# –ú–Ω–µ –±—É–¥–µ—Ç –ª–µ–≥—á–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ —Ç—ã –≤—ã–¥–µ–ª–∏—à—å —Å–≤–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:
# <div class="alert alert-info"> <b>üéì –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞:</b> –ù–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫.</div>
# –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–µ—Ä–µ–º–µ—â–∞–π, –Ω–µ –∏–∑–º–µ–Ω—è–π –∏ –Ω–µ —É–¥–∞–ª—è–π –º–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. –í—Å—ë —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –±—ã—Å—Ç—Ä–µ–µ.
#  </div>
# 

# # –ü—Ä–æ–µ–∫—Ç: —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏

# <div class="alert">
# <h2> –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ <a class="tocSkip"> </h2>
# 
# –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∑–∏ ¬´–¢–µ–ª–µ–î–æ–º¬ª —Ö–æ—á–µ—Ç –±–æ—Ä–æ—Ç—å—Å—è —Å –æ—Ç—Ç–æ–∫–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–∞—á–Ω—É—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤—Å–µ–º, –∫—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É—Å–ª—É–≥ —Å–≤—è–∑–∏. –ß—Ç–æ–±—ã –∑–∞—Ä–∞–Ω–µ–µ –Ω–∞—Ö–æ–¥–∏—Ç—å —Ç–∞–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, ¬´–¢–µ–ª–µ–î–æ–º—É¬ª –Ω—É–∂–Ω–∞ –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å, —Ä–∞–∑–æ—Ä–≤—ë—Ç –ª–∏ –∞–±–æ–Ω–µ–Ω—Ç –¥–æ–≥–æ–≤–æ—Ä. –ö–æ–º–∞–Ω–¥–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–æ–±—Ä–∞–ª–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Ö —Ç–∞—Ä–∏—Ñ–∞—Ö –∏ —É—Å–ª—É–≥–∞—Ö. –ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –æ–±—É—á–∏—Ç—å –Ω–∞ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –æ—Ç—Ç–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤.
# 
# –û–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–≤–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–∞ —É—Å–ª—É–≥: 
# –°—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω—É—é —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É—é —Å–≤—è–∑—å. –¢–µ–ª–µ—Ñ–æ–Ω –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ª–∏–Ω–∏—è–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
# –ò–Ω—Ç–µ—Ä–Ω–µ—Ç. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–≤—É—Ö —Ç–∏–ø–æ–≤: —á–µ—Ä–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É—é –ª–∏–Ω–∏—é (DSL, –æ—Ç –∞–Ω–≥–ª. digital subscriber line ‚Äî ¬´—Ü–∏—Ñ—Ä–æ–≤–∞—è –∞–±–æ–Ω–µ–Ω—Ç—Å–∫–∞—è –ª–∏–Ω–∏—è¬ª) –∏–ª–∏ –æ–ø—Ç–æ–≤–æ–ª–æ–∫–æ–Ω–Ω—ã–π –∫–∞–±–µ–ª—å (Fiber optic).
# 
# –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–∞–∫–∏–µ —É—Å–ª—É–≥–∏:
# –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –∞–Ω—Ç–∏–≤–∏—Ä—É—Å (DeviceProtection) –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ (OnlineSecurity);
# –í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (TechSupport);
# –û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (OnlineBackup);
# –°—Ç—Ä–∏–º–∏–Ω–≥–æ–≤–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ (StreamingTV) –∏ –∫–∞—Ç–∞–ª–æ–≥ —Ñ–∏–ª—å–º–æ–≤ (StreamingMovies).
# –ö–ª–∏–µ–Ω—Ç—ã –º–æ–≥—É—Ç –ø–ª–∞—Ç–∏—Ç—å –∑–∞ —É—Å–ª—É–≥–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –∏–ª–∏ –∑–∞–∫–ª—é—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä –Ω–∞ 1‚Äì2 –≥–æ–¥–∞. –í–æ–∑–º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —á–µ–∫.
# 
# <b> –û–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö </b> 
# 
# –î–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è—Ç –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: \
# contract_new.csv ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–≥–æ–≤–æ—Ä–µ; \
# personal_new.csv ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞; \
# internet_new.csv ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—É—Å–ª—É–≥–∞—Ö; \
# phone_new.csv ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–∏–∏. 
# 
# 
# <b> –§–∞–π–ª contract_new.csv </b> \
# customerID ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–±–æ–Ω–µ–Ω—Ç–∞; \
# BeginDate ‚Äî –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞; \
# EndDate ‚Äî –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞; \
# Type ‚Äî —Ç–∏–ø –æ–ø–ª–∞—Ç—ã: —Ä–∞–∑ –≤ –≥–æ–¥-–¥–≤–∞ –∏–ª–∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ; \
# PaperlessBilling ‚Äî —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —Ä–∞—Å—á—ë—Ç–Ω—ã–π –ª–∏—Å—Ç; \
# PaymentMethod ‚Äî —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞; \
# MonthlyCharges ‚Äî —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü; \
# TotalCharges ‚Äî –æ–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –∞–±–æ–Ω–µ–Ω—Ç–∞. 
#     
# <b> –§–∞–π–ª personal_new.csv </b> \
# customerID ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è; \
# gender ‚Äî –ø–æ–ª; \
# SeniorCitizen ‚Äî —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–±–æ–Ω–µ–Ω—Ç –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–º; \
# Partner ‚Äî –µ—Å—Ç—å –ª–∏ —É –∞–±–æ–Ω–µ–Ω—Ç–∞ —Å—É–ø—Ä—É–≥ –∏–ª–∏ —Å—É–ø—Ä—É–≥–∞; \
# Dependents ‚Äî –µ—Å—Ç—å –ª–∏ —É –∞–±–æ–Ω–µ–Ω—Ç–∞ –¥–µ—Ç–∏.
# 
# <b> –§–∞–π–ª internet_new.csv </b> \
# customerID ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è; \ 
# InternetService ‚Äî —Ç–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è; \
# OnlineSecurity ‚Äî –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–ø–∞—Å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤; \
# OnlineBackup ‚Äî –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö; \
# DeviceProtection ‚Äî –∞–Ω—Ç–∏–≤–∏—Ä—É—Å; \
# TechSupport ‚Äî –≤—ã–¥–µ–ª–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏; \
# StreamingTV ‚Äî —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–≤–æ–µ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ; \
# StreamingMovies ‚Äî –∫–∞—Ç–∞–ª–æ–≥ —Ñ–∏–ª—å–º–æ–≤.
# 
# <b> –§–∞–π–ª phone_new.csv </b> \
# customerID ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è; \
# MultipleLines ‚Äî –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ª–∏–Ω–∏—è–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ. 
#     
# –í–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö —Å—Ç–æ–ª–±–µ—Ü customerID —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–≥–æ–≤–æ—Ä–∞—Ö –∞–∫—Ç—É–∞–ª—å–Ω–∞ –Ω–∞ 1 —Ñ–µ–≤—Ä–∞–ª—è 2020 –≥–æ–¥–∞.

# In[1]:


get_ipython().system('pip install phik')


# In[2]:


# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import phik
from phik import resources, report

from sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score 
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.linear_model import LogisticRegression
from catboost import CatBoostClassifier
from sklearn.metrics import roc_curve, auc, confusion_matrix, roc_auc_score

import warnings
warnings.filterwarnings("ignore")


# In[3]:


RANDOM_STATE = 190224
scaler = StandardScaler()
encoder = OneHotEncoder(sparse=False, drop='first') 


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã!
# </div>

# In[4]:


# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

contract = pd.read_csv('/datasets/contract_new.csv', parse_dates={"date": ["BeginDate"]})
personal = pd.read_csv('/datasets/personal_new.csv')
internet = pd.read_csv('/datasets/internet_new.csv')
phone = pd.read_csv('/datasets/phone_new.csv')


# ### –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

# In[5]:


def general_info(data):
    display(data.head(10))
    print('-------------------------------INFO-----------------------------------')
    display(data.info())
    print('-------------------------------DESCRIBE-------------------------------')
    display(data.describe(percentiles=[0.05, 1/4, 1/2, 3/4, 0.95]).T)


# #### –î–∞—Ç–∞—Å–µ—Ç contract

# In[6]:


general_info(contract)


# In[7]:


print(f"–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ contract:")
pd.DataFrame(round(contract.isna().mean()*100,1)).style.background_gradient('coolwarm')


# <b>–ü–µ—Ä–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –¥–∞—Ç–∞—Å–µ—Ç—É contract: </b>
# * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ PEP8.
# * –í–µ—Ä–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö (BeginDate –∫ —Ñ–æ—Ä–º–∞—Ç—É –¥–∞—Ç—ã, EndDate - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å–∫–æ—Ä–µ–π –≤—Å–µ–≥–æ —Ç–æ–∂–µ –¥–∞—Ç–∞, TotalCharges - float64).

# In[8]:


# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ PEP 8
contract = contract.rename(columns={'customerID': 'CustomerID', 'date': 'BeginDate'})
contract.head(1)


# In[9]:


# –ü–µ–≤–µ—Ä–µ–¥–µ–º totalcharges –≤ —Ñ–æ—Ä–º–∞—Ç float
contract.TotalCharges = pd.to_numeric(contract.TotalCharges, errors ='coerce')
contract.info()


# In[10]:


print(f"–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ contract:")
pd.DataFrame(round(contract.isna().mean()*100,1)).style.background_gradient('coolwarm')


# –í —Å—Ç–æ–ª–±—Ü–µ totalcharges –ø–æ—è–≤–∏–ª–∏—Å—å –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –¥–∞–≤–∞–π—Ç–µ –∏—Ö –ø—Ä–æ–≤–µ—Ä–∏–º.

# In[11]:


contract.loc[contract.TotalCharges.isna()==True]


# –í—Å–µ–≥–æ 11 –ø–æ–∑–∏—Ü–∏–π, –µ—Å–ª–∏ —Å—É–¥–∏—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–∏ —Ç–æ —ç—Ç–æ –∫–ª–∏–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–ª—å–∫–æ —á—Ç–æ –∑–∞–∫–ª—é—á–∏–ª–∏ –¥–æ–≥–æ–≤–æ—Ä —Å –æ–ø–ª–∞—Ç–æ–π —Ä–∞–∑ –≤ –æ–¥–∏–Ω/–¥–≤–∞ –≥–æ–¥–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏—Ö —Ä–∞—Å—Ö–æ–¥—ã –∑–Ω–∞—á–µ–Ω–∏–µ–º 0

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ! –î–µ–Ω—å–≥–∏ –æ—Ç –Ω–∏—Ö –µ—â–µ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏
# </div>

# In[12]:


contract.TotalCharges = contract.TotalCharges.fillna(0)


# In[13]:


print(f"–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ contract:")
pd.DataFrame(round(contract.isna().mean()*100,1)).style.background_gradient('coolwarm')


# In[14]:


contract.query("CustomerID=='4472-LVYGI'")


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# #### –î–∞—Ç–∞—Å–µ—Ç personal

# In[15]:


general_info(personal)


# In[16]:


print(f"–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ personal:")
pd.DataFrame(round(personal.isna().mean()*100,1)).style.background_gradient('coolwarm')


# <b>–ü–µ—Ä–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –¥–∞—Ç–∞—Å–µ—Ç—É personal: </b>
# * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ PEP8.

# In[17]:


# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ PEP 8
personal = personal.rename(columns={'customerID': 'CustomerID', 'gender': 'Gender'})
personal.head(1)


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# #### –î–∞—Ç–∞—Å–µ—Ç internet

# In[18]:


general_info(internet)


# In[19]:


print(f"–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ internet:")
pd.DataFrame(round(internet.isna().mean()*100,1)).style.background_gradient('coolwarm')


# <b>–ü–µ—Ä–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –¥–∞—Ç–∞—Å–µ—Ç—É internet: </b>
# * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ PEP8.

# In[20]:


# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ PEP 8
internet = internet.rename(columns={'customerID': 'CustomerID'})
internet.head(1)


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# #### –î–∞—Ç–∞—Å–µ—Ç phone

# In[21]:


general_info(phone)


# In[22]:


print(f"–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ phone:")
pd.DataFrame(round(phone.isna().mean()*100,1)).style.background_gradient('coolwarm')


# <b>–ü–µ—Ä–≤—ã–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –¥–∞—Ç–∞—Å–µ—Ç—É phone: </b>
# * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ PEP8.

# In[23]:


# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ PEP 8
phone = phone.rename(columns={'customerID': 'CustomerID'})
phone.head(1)


# #### –û–±—â–∏–µ –≤—ã–≤–æ–¥—ã –ø–æ –ø–µ—Ä–≤–æ–º—É –ø—É–Ω–∫—Ç—É —Ä–∞–±–æ—Ç—ã:
# * –Ω–∞ –≤—Ö–æ–¥–µ –∏–º–µ–µ–º —á–µ—Ç—ã—Ä–µ –¥–∞—Ç–∞—Å–µ—Ç–∞, –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ —É–∫–∞–∑–∞–Ω–æ –≤ –Ω–∞—á–∞–ª–µ –ø—Ä–æ–µ–∫—Ç–∞;
# * –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –¥–∞—Ç–∞—Å–µ—Ç—ã –Ω–∞ –ø—Ä–æ–ø—É—Å–∫–∏;
# * –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∏ –≤ —Å—Ç–æ–ª–±—Ü–µ TotalCharges (–Ω–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã);
# * –ø—Ä–∏–≤–µ–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –∫–∞–∂–¥–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ –∫ PEP 8;
# * –ø—Ä–∏–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –∫ –≤–µ—Ä–Ω–æ–º—É —Ç–∏–ø—É –¥–∞–Ω–Ω—ã—Ö.

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –î–∞—Ç–∞—Å–µ—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!
# </div>

# ### –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö

# In[24]:


# –§—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤

def count_all (data, col):
    y = data.groupby(col)[col].count().sort_values(ascending=False)
    return y


# In[25]:


display(f'–î—É–±–ª–∏–∫–∞—Ç—ã contract: {contract.duplicated().sum()}')
display(f'–î—É–±–ª–∏–∫–∞—Ç—ã personal: {personal.duplicated().sum()}')
display(f'–î—É–±–ª–∏–∫–∞—Ç—ã internet: {internet.duplicated().sum()}')
display(f'–î—É–±–ª–∏–∫–∞—Ç—ã phone: {phone.duplicated().sum()}')


# –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤–æ –≤—Å–µ—Ö –¥–∞—Ç–∞—Å–µ—Ç–∞—Ö –Ω–µ—Ç

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# #### –î–∞—Ç–∞—Å–µ—Ç contract

# In[26]:


contract.nunique()


# In[27]:


contract.head(3)


# –ü—Ä–µ–¥–ª–∞–≥–∞—é —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü - Sign , –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–¥–∞–¥–∏–º —Ü–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫ 0 - –∫–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–ª—Å—è, 1 - –∫–ª–∏–µ–Ω—Ç —É—à–µ–ª, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ EndDate. –í —Å—Ç–æ–ª–±—Ü–µ EndDate 'No' –∑–∞–ø–æ–ª–Ω–∏–º –∫—Ä–∞–π–Ω–µ–π –¥–∞—Ç–æ–π (2020-02-01), —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –æ–±—â–µ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏ –∏ —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è —ç—Ç–æ–≥–æ –Ω–æ–≤—ã–π –ø—Ä–∏–∑–Ω–∞–∫ - UseTime

# In[28]:


contract['Sign'] = (contract['EndDate'] != 'No').astype(int)
contract.sample(5)


# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ <a class="tocSkip"> </h2>
# 
# –û—Ç–Ω–µ–∫–∏–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É, –∫–æ–¥ –ø–æ–¥–≥–ª—è–¥–µ–ª. –°–∞–º –Ω–µ —Å–º–æ–≥ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∫–∞–∫ –∑–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ —Å –¥–∞—Ç–∞–º–∏ –Ω–∞ 1, –Ω—É–∂–Ω–æ –ª–∏–±–æ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª –ø—Ä–æ–≥–æ–Ω—è—Ç—å, –ª–∏–±–æ –∫–æ—Ä—Ç–µ–∂ —Å–æ–∑–¥–∞–≤–∞—Ç—å? –í–æ–æ–±—â–µ–º –∏—Ç–∞–∫ –∏ —Ç–∞–∫ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å. –î–∞ –∏ –ø–æ—á–µ–º—É –≤ –¥–∞–Ω–Ω–æ–º –∫–æ–¥–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è 0 –∏ 1 —Ç–æ–∂–µ –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å...
# </div>

# <div class="alert alert-warning">
# <b>ü§î –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –ó–¥–µ—Å—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —É—Å–ª–æ–≤–∫–∏–µ –∏ –≤ –∏—Ç–æ–≥–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –±—É–ª–µ–≤–æ –∑–Ω–≤—á–µ–Ω–∏–µ - False –∏–ª–∏ True –ø—Ä–∏ –ø—Ä–∏–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –≤ —Ü–µ–ª–æ–µ —Ü–∏—Å–ª–æ –ø–æ–ª—É—á–∞—é—Ç 0 –∏ 1
# </div>

# In[29]:


contract['EndDate'] = contract['EndDate'].replace({'No': '2020-02-01'})


# In[30]:


contract['EndDate'].nunique()


# In[31]:


# –ø—Ä–∏–≤–µ–¥–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö EndDate –∫ —Ç–∏–ø—É –¥–∞–Ω–Ω—ã—Ö
contract['EndDate'] = pd.to_datetime(contract['EndDate'], format='%Y-%m-%d')


# In[32]:


contract.head(7)


# In[33]:


# –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–Ω–µ–π –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏
contract['UseTime'] = (contract['EndDate'] - contract['BeginDate']).dt.days


# In[34]:


contract.head()


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–∏–∑–Ω–∞–∫! –û–Ω –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –≤ –æ–±—É—á–µ–Ω–∏–∏ –º–æ–¥–µ–ª–∏
# </div>

# In[35]:


contract.info()


# In[36]:


# –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
Type_count, PaperlessBilling_count, PaymentMethod_count, Sign_count = (
                                                                       count_all(contract, 'Type'),
                                                                       count_all(contract, 'PaperlessBilling'),
                                                                       count_all(contract, 'PaymentMethod'),
                                                                       count_all(contract, 'Sign')
                                                                       )


# In[37]:


plt.figure(figsize=(20, 10))
plt.subplot(1, 4, 1)
Type_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Type', autopct = '%1.0f%%')
plt.subplot(1, 4, 2)
PaperlessBilling_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ PaperlessBilling', autopct = '%1.0f%%', labels=['–î–∞', '–ù–µ—Ç'])
plt.subplot(1, 4, 3)
PaymentMethod_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ PaymentMethod', autopct = '%1.0f%%')
plt.subplot(1, 4, 4)
Sign_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Sign', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞']);


# In[38]:


contract.MonthlyCharges.hist(bins='auto', figsize=(15,5))
plt.title('–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–µ—Å—è—Ü (MonthlyCharges)', size=15)
plt.xlabel('–°—É–º–º–∞')
plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ')
plt.show();


# In[39]:


contract.UseTime.hist(bins='auto', figsize=(15,5))
plt.title('–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏ (UseTime)', size=15)
plt.xlabel('–°—É–º–º–∞ –≤ –¥–Ω—è—Ö')
plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤')
plt.show();


# In[40]:


contract.TotalCharges.hist(bins='auto', figsize=(15,5))
plt.title('–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –æ–±—â–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∞–±–æ–Ω–µ–Ω—Ç–∞ (TotalCharges)', size=15)
plt.xlabel('–°—É–º–º–∞')
plt.ylabel('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤')
plt.show();


# In[41]:


contract.query('TotalCharges < 1000 ')


# In[42]:


aaa = 2965/7043*100
aaa


# In[43]:


# –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è phik
contract_phik = contract.drop('CustomerID', axis=1)


# In[44]:


contract_phik.phik_matrix(interval_cols=['MonthlyCharges', 'TotalCharges', 'Sign', 'UseTime'])


# –û–±—â–∏–µ –≤—ã–≤–æ–¥—ã:
# * —Å–æ–∑–¥–∞–Ω —Ü–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫ Sign, –≥–¥–µ 0 —á–µ–ª–æ–≤–µ–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏, 1 - —á–µ–ª–æ–≤–µ–∫ –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏;
# * —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–∏–∑–Ω–∞–∫ UseTime –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ —è–≤–ª—è–µ—Ç—Å—è/—è–≤–ª—è–ª–∏—Å—å –∞–±–æ–Ω–µ–Ω—Ç–æ–º;
# * c—Ç–æ–ª–±–µ—Ü BeginData –ø—Ä–∏–≤–µ–¥–µ–Ω –∫ —Ç–∏–ø—É –¥–∞—Ç—ã, –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è No –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –¥–∞—Ç—É –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ (2020-02-01);
# * —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É Type (—Ç–∏–ø –æ–ø–ª–∞—Ç—ã: —Ä–∞–∑ –≤ –≥–æ–¥-–¥–≤–∞ –∏–ª–∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ): 55% –æ–ø–ª–∞—á–∏–≤–∞—é—Ç —É—Å–ª—É–≥–∏ –∫–∞–∂–¥—ã –º–µ—Å—è—Ü, 24% —Ä–∞–∑ –≤ –¥–≤–∞ –≥–æ–¥–∞, 21% —Ä–∞–∑ –≤ –≥–æ–¥;
# * —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É PaperlessBilling (—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —Ä–∞—Å—á—ë—Ç–Ω—ã–π –ª–∏—Å—Ç): 59% –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑—É—é—Ç—Å—è, 41% –Ω–µ—Ç;
# * —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É PaymentMethod (—Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞): 31% –∏—Å–ø–æ–ª—å–∑—É—é—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —á–µ–∫, 23% paymentMethod(–ª—é–±—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞), 22% —É Bank transfer –∏ credit card;
# * —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Sign (–ø–µ—Ä–µ—Å—Ç–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏ (—Ü–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫)) 84% –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç, 16% –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏;
# * –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–µ—Å—è—Ü (MonthlyCharges) –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞, —á—Ç–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç —É—Å–ª—É–≥–∏ —Ä–∞–∑ –≤ –º–µ—Å—è—Ü;
# * –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏ (UseTime) –ø–æ–∫–∞–∑–∞–ª–∞, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç—ã –ª–∏–±–æ –ø–æ–ª—å–∑—É—é—Ç—Å—è —É—Å–ª—É–≥–∞–º–∏ –º–µ–Ω—å—à–µ –≥–æ–¥–∞ –∏ —É—Ö–æ–¥—è—Ç, –ª–∏–±–æ –ø–æ–ª—å–∑—É—é—Ç—Å—è —É—Å–ª—É–≥–∞–º–∏ –±–æ–ª—å—à–µ 2000 –¥–Ω–µ–π;
# * –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø—Ä–∏–Ω–µ—Å–ª–æ –¥–æ—Ö–æ–¥ –¥–æ 1000 —É.–µ., —á—Ç–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 42%
# * –±–æ–ª—å—à–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è —Å–≤—è–∑—å —É UseTime –∫ BeginDate (97%), UseTime –∫ TotalCharges (84%), TotalCharges –∫ BeginDate (77%), TotalCharges –∫ MonthlyCharges (71%); 
# * –ø—Ä–æ–ø—É—Å–∫–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ! –î–∞—Ç–∞—Å–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω
# </div>

# #### –î–∞—Ç–∞—Å–µ—Ç personal

# In[45]:


personal.head(3)


# In[46]:


#–í –¥–∞–Ω–Ω–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å—Ä–∞–∑—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏—Ö –≤ 1 –∏–ª–∏ 0, —á—Ç–æ–±—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –∫–æ–¥–∏—Ä–æ–≤—â–∏–∫ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª –Ω–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã
#personal['Gender'] = personal['Gender'].replace({'Female': '0', 'Male': '1'})
#personal['Partner'] = personal['Partner'].replace({'No': '0', 'Yes': '1'})
#personal['Dependents'] = personal['Dependents'].replace({'No': '0', 'Yes': '1'})


# In[47]:


personal.nunique()


# In[48]:


# –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
Gender_count, SeniorCitizen_count, Partner_count,  Dependents_count = (
                                                                       count_all(personal, 'Gender'), 
                                                                       count_all(personal, 'SeniorCitizen'), 
                                                                       count_all(personal, 'Partner'), 
                                                                       count_all(personal, 'Dependents')
                                                                      ) 


# In[49]:


plt.figure(figsize=(20, 10))
plt.subplot(1, 4, 1)
Gender_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Gender', autopct = '%1.0f%%', labels=['–ú—É–∂—á–∏–Ω–∞', '–ñ–µ–Ω—â–∏–Ω–∞'])
plt.subplot(1, 4, 2)
SeniorCitizen_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ SeniorCitizen', autopct = '%1.0f%%', labels=['–ù–µ –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä', '–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä'])
plt.subplot(1, 4, 3)
Partner_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Partner', autopct = '%1.0f%%', labels=['–•–æ–ª–æ—Å—Ç', '–ñ–µ–Ω–∞—Ç'])
plt.subplot(1, 4, 4)
Dependents_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Dependents', autopct = '%1.0f%%', labels=['–ù–µ—Ç –¥–µ—Ç–µ–π', '–ï—Å—Ç—å –¥–µ—Ç–∏']);


# In[50]:


personal.iloc[:,1:].phik_matrix(interval_cols=['SeniorCitizen'])


# –í—ã–≤–æ–¥—ã –ø–æ personal:
# * –ú—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω –ø–æ—Ä–æ–≤–Ω—É;
# * –ü–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤ 16% –æ—Ç –æ–±—â–µ–π –º–∞—Å—Å—ã;
# * –ó–∞–º—É–∂–Ω–∏—Ö/–∂–µ–Ω–∞—Ç—ã—Ö –ª—é–¥–µ–π –ø—Ä–∏–º–µ—Ä–Ω–æ –ø–æ—Ä–æ–≤–Ω—É –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –Ω–µ–∑–∞–º—É–∂–Ω–∏–º/–Ω–µ–∂–µ–Ω–∞—Ç—ã–º;
# * –î–µ—Ç–∏ –µ—Å—Ç—å —É 30% –∞–±–æ–Ω–µ–Ω—Ç–æ–≤;
# * –°–∏–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è —Å–≤—è–∑—å —É Gender –∏ Dependents, —Ö–æ—Ä–æ—à–∞—è —Å–≤—è–∑—å —É Dependents –∏ Partner (65%).

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# #### –î–∞—Ç–∞—Å–µ—Ç internet

# In[51]:


internet.head(3)


# In[52]:


internet.nunique()


# –ü–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –¥–∞—Ç–∞—Å–µ—Ç–æ–º personal –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å—Ä–∞–∑—É –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ 1 –∏ 0

# In[53]:


# –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
(
    OnlineSecurity_count, 
    OnlineBackup_count, 
    DeviceProtection_count, 
    TechSupport_count, 
    StreamingTV_count, 
    StreamingMovies_count
) = (
    count_all(internet, 'OnlineSecurity'), 
    count_all(internet, 'OnlineBackup'), 
    count_all(internet, 'DeviceProtection'), 
    count_all(internet, 'TechSupport'), 
    count_all(internet, 'StreamingTV'), 
    count_all(internet, 'StreamingMovies')
    ) 


# In[54]:


plt.figure(figsize=(20, 10))
plt.subplot(1, 3, 1)
OnlineSecurity_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ OnlineSecurity', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞'])
plt.subplot(1, 3, 2)
OnlineBackup_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ OnlineBackup', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞'])
plt.subplot(1, 3, 3)
DeviceProtection_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ DeviceProtection', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞']);


# In[55]:


plt.figure(figsize=(20, 10))
plt.subplot(1, 3, 1)
TechSupport_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ TechSupport', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞'])
plt.subplot(1, 3, 2)
StreamingTV_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ StreamingTV', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞'])
plt.subplot(1, 3, 3)
StreamingMovies_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ StreamingMovies', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞']);


# In[56]:


internet.iloc[:,1:].phik_matrix()#interval_cols=[''])


# –í—ã–≤–æ–¥—ã:
# * –•–æ—Ä–æ—à–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è —Å–≤—è–∑—å –º–µ–∂–¥—É StreamingMovies –∏ StreamingTV (63%);
# * –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –¥–∞–Ω–Ω—ã–º –∫–∞–∂–¥–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ —É–∫–∞–∑–∞–Ω—ã –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞—Ö, –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å—ã–≤–∞—Ç—å –Ω–µ –≤–∏–∂—É —Å–º—ã—Å–ª–∞, –æ—Å–æ–±–æ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è, –≤—Å—ë –ø—Ä–∏–º–µ—Ä–Ω–æ –ø–æ–ø–æ–ª–∞–º.

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# #### –î–∞—Ç–∞—Å–µ—Ç phone

# In[57]:


phone.head(3)


# In[58]:


phone.nunique()


# In[59]:


# –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
MultipleLines_count = count_all(phone, 'MultipleLines')


# In[60]:


plt.figure(figsize=(10, 5))
MultipleLines_count.plot(kind = 'pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ MultipleLines', autopct = '%1.0f%%', labels=['–ù–µ—Ç', '–î–∞']);


# –í—ã–≤–æ–¥—ã:
# * —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–Ω–æ 53% –Ω–∞ 47%.

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# ### –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

# –û–±—ä–µ–¥–∏–Ω–∏–º –≤—Å–µ 4 –¥–∞—Ç–∞—Å–µ—Ç–∞ –≤ –æ–¥–∏–Ω –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã, –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ –≤–∞–∂–Ω—ã–º —Å—á–∏—Ç–∞—é –¥–∞—Ç–∞—Å–µ—Ç contract, –ø–æ—ç—Ç–æ–º—É –ø—Ä–µ–¥–ª–∞–≥–∞—é –∫ –Ω–µ–º—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–∞—Ç–∞—Å–µ—Ç—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏, –∑–∞ –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ –≤–æ–∑—å–º–µ–º —Å—Ç–æ–ª–±–µ—Ü CustomerID

# In[61]:


data = contract.merge(personal, how='left', on='CustomerID')
data = data.merge(internet, how='left', on='CustomerID')
data = data.merge(phone, how='left', on='CustomerID')


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ! –í—ã–±—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –∏ –ø–æ—Ä—è–¥–æ–∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
# </div>

# In[62]:


general_info(data)


# –í–∏–¥–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∏ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Å—Ç–æ–ª–±—Ü–∞–º, —Å–∫–æ—Ä–µ–π –≤—Å–µ–≥–æ —ç—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –Ω–µ –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤—Å–µ —É—Å–ª—É–≥–∏.

# In[63]:


data.isnull().sum()


# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ <a class="tocSkip"> </h2>
# 
# –ú–µ–Ω—è —Å–º—É—â–∞–µ—Ç, —á—Ç–æ –≤–µ–∑–¥–µ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ - 1526
# </div>

# <div class="alert alert-warning">
# <b>ü§î –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –î–∞, —ç—Ç–æ —Ç–∞–∫, –∞ –ø–æ—á–µ–º—É —Ç–∞–∫–æ–µ –º–æ–≥–ª–æ —Å–ª—É—á–∏—Ç—Å—è? –í –∫–∞–∫–æ–º –¥–∞—Ç–∞—Å–µ—Ç–µ –±—ã–ª–∏ —ç—Ç–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏? –°–æ–≤–ø–∞–¥–∞–ª–∏ —Ä–∞–∑–º–µ—Ä—ã –¥–∞—Ç–∞—Å–µ—Ç–æ–≤? –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø—Ä–∏ –ª–µ–≤–æ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏? –ë–µ–∑ –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–∏—Ä–æ–¥—ã –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏—Ö –∑–∞–ø–æ–ª–Ω–∏—Ç—å
# </div>

# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ v2<a class="tocSkip"> </h2>
# 
# –Ø –ø–æ–Ω—è–ª, –≤ –¥–≤—É—Ö –¥–∞—Ç–∞—Å–µ—Ç–∞—Ö –º–µ–Ω—å—à–µ –∑–∞–ø–∏—Å–µ–π, —Å–æ–≤—Å–µ–º –≤—ã–ª–µ—Ç–µ–ª–æ –∏–∑ –≥–æ–ª–æ–≤—ã, –±–ª–∞–≥–æ–¥–∞—Ä—é.
# </div>

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ))) –ú–æ–∂–µ—Ç –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞—Ç—å? –£ —Ç–µ–±—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è
#     
# </div>

# In[64]:


bool_series = pd.isnull(data["DeviceProtection"])
data[bool_series]


# –ï—Å–ª–∏ –ª—é–¥–∏ –Ω–µ –ø–æ–ª—å–∑—É—é—Ç—Å—è —É—Å–ª—É–≥–∞–º–∏, –ø—Ä–µ–¥–ª–∞–≥–∞—é –∑–∞–º–µ–Ω–∏—Ç—å –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ No

# <div class="alert alert-warning">
# <b>ü§î –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –ó–Ω–∞—á–µ–Ω–∏–µ No –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —É—Å–ª—É–≥–∞, –Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏–Ω—Ç–µ—Ä–µ–Ω—Ç –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–ø—É—Å–∫–æ–≤ —ç—Ç–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –Ω–µ –¥–∞—Å—Ç —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É —ç—Ç–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
# </div>

# In[65]:


data = data.fillna('No')


# In[66]:


data.isnull().sum()


# –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# ### –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞

# In[67]:


data.head(3)


# –ü—Ä–µ–¥–ª–∞–≥–∞—é –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—Ç–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤.

# In[68]:


sign_counts = data.groupby('Sign')['UseTime'].sum()
sign_counts.plot(kind='pie', title = '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ UseTime –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ Sign', autopct = '%1.0f%%');


# In[69]:


data_corr = data.drop(['CustomerID'], axis=1)


# In[70]:


for column in data_corr.columns:
    data_corr.groupby('Sign')[column].hist()
    plt.title(column)
    plt.legend(['–û—Å—Ç–∞–≤—à–∏–µ—Å—è', '–û—Ç—Ç–æ–∫'])
    plt.show()


# –í—ã–≤–æ–¥—ã:
# * —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –ª—é–¥–∏ –Ω–∞—á–∏–Ω–∞—é—Ç –º–µ–Ω—å—à–µ –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ—Ç —É—Å–ª—É–≥ —Å–≤—è–∑–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞—á–∏–Ω–∞—è —Å 2017 –≥–æ–¥–∞;
# * –û—Ç—Ç–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–µ –æ—Å–æ–±–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ –æ–ø–ª–∞—Ç—ã, —É—Ö–æ–¥—è—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ;
# * –ö–ª–∏–µ–Ω—Ç—ã —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º —Ä–∞—Å—á–µ—Ç–Ω—ã–º –ª–∏—Å—Ç–æ–º —á–∞—â–µ –æ—Ç–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –æ—Ç —É—Å–ª—É–≥;
# * –ß–∞—â–µ –≤—Å–µ–≥–æ —É—Ö–æ–¥—è—Ç –ª—é–¥–∏ —Å —Ç–∏–ø–æ–º –ø–ª–∞—Ç–µ–∂–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —á–µ–∫;
# * TotalCharges –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —É—Ö–æ–¥—è—Ç –∫–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏;
# * –¶–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫ —Ä–∞–∑–¥–µ–ª–µ–Ω 1 –∫ 6;
# * –í—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∞–º–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –≤ —Å—Ä–µ–¥–Ω–µ–º —É—Ö–æ–¥—è—Ç –¥–æ 1500 –¥–Ω–µ–π;
# * –ú—É–∂—á–∏–Ω—ã –∏ –∂–µ–Ω—â–∏–Ω—ã –æ–¥–∏–Ω–∞–∫–æ–≥–æ —É—Ö–æ–¥—è—Ç, —Ä–∞–∑–Ω–∏—Ü—ã –æ—Å–æ–±–æ –Ω–µ—Ç;
# * –ü–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤ –≤ –ø—è—Ç—å —Ä–∞–∑ –º–µ–Ω—å—à–µ –∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Ö –∫—Ç–æ —É—à–µ–ª —Ç–∞–∫–∂–µ –Ω–∞–º–Ω–æ–≥–æ –º–µ–Ω—å—à–µ;
# * –ß–∞—â–µ —É—Ö–æ–¥—è—Ç –ª—é–¥–∏ —Å–æ—Å—Ç–æ—è—â–∏–µ –≤ –±—Ä–∞–∫–µ;
# * –ß–∞—â–µ —É—Ö–æ–¥—è—Ç –ª—é–¥–∏ –±–µ–∑ –¥–µ—Ç–µ–π;
# * –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ DSL –∏ –æ–ø—Ç–æ–≤–æ–ª–æ–∫–Ω–æ –ø—Ä–∏–º–µ—Ä–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ, –Ω–æ —á–∞—â–µ —É—Ö–æ–¥—è—Ç –ª—é–¥–∏ —Å–æ –≤—Ç–æ—Ä—ã–º —Ç–∏–ø–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è;
# * –í—Å–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –æ—Ç—Ç–æ–∫—É –∫–ª–∏–µ–Ω—Ç–æ–≤, –æ—Å–æ–±–æ –Ω–µ –≤–ª–∏—è—é—Ç.

# In[71]:


plt.figure(figsize=(20,15))
sns.heatmap(data = data_corr.phik_matrix(interval_cols=['MonthlyCharges', 'TotalCharges', 'Sign', 'UseTime', 'SeniorCitizen']), annot=True)
plt.title('–ú–∞—Ç—Ä–∏—Ü–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π')
plt.show()


# –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –º—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Ü–µ–ª–µ–≤–æ–≥–æ –ø—Ä–∏–∑–Ω–∞–∫–∞ - EndDate, –Ω–∏–∑–∫—É—é –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –∏–º–µ—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∏—á–∏: PaperlessBilling (0,083), Type (0.094), Gender (0.0086), SeniorSitizen (0.086). –¢–∞–∫ –∂–µ —Å–∏–ª—å–Ω—É—é –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—É—é —Å–≤—è–∑—å –∏–º–µ—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã UseTime –∏ BeginDate. \
# –û—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ª—É—á—à–µ –≤—Å–µ–≥–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –∏–º–µ—é—Ç —Å–∏–ª—å–Ω—É—é –ª–∏–Ω–µ–π–Ω—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏ –º–æ–≥—É—Ç –ø–ª–æ—Ö–æ –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏, –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –Ω–∞ –Ω–∞—à–∏—Ö –º–æ–¥–µ–ª—è—Ö –Ω–∏–∂–µ.
# 

# <div class="alert alert-danger">
# <s><b>üòî –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:</b> –ó–¥–µ—Å—å –¥–æ–ª–µ–Ω –±—ã—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥, —á—Ç–æ —É–≤–∏–¥–µ–ª–∏ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∞—Ö –≤—ã—à–µ? –ù–∞ —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç–µ? –ö–∞–∫–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –º—É–ª—å—Ç–∏–∫–æ–ª–ª–µ–Ω–∏–∞—Ä–Ω—ã –∏ —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å?</s>
# </div>

# <div class="alert alert-info">
# <h2> –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞ v2<a class="tocSkip"> </h2>
# 
# –ü–æ–ø—Ä–∞–≤–∏–ª. –ê —Ç–∞–∫ –∂–µ –¥–æ–±–∞–≤–∏–ª –ø—É–Ω–∫—Ç 9 —Å –¥–æ–ø. –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º.
# </div>

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –û—Ç–ª–∏—á–Ω–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å!
# </div>

# ### –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö

# In[72]:


def standard_scaler(X_train, X_test, num_col_names, scaler):
    X_train_scaled = scaler.fit_transform(X_train[num_col_names])
    X_test_scaled = scaler.transform(X_test[num_col_names])
    
    X_train_scaled = pd.DataFrame(X_train_scaled, columns=num_col_names)
    X_test_scaled = pd.DataFrame(X_test_scaled, columns=num_col_names)

    return X_train_scaled, X_test_scaled


# In[73]:


def normal_encoder(X_train, X_test, encoder):
    X_train_ohe = encoder.fit_transform(X_train)
    X_test_ohe = encoder.transform(X_test)

    encoder_col_names = encoder.get_feature_names()

    X_train_ohe = pd.DataFrame(X_train_ohe, columns=encoder_col_names)
    X_test_ohe = pd.DataFrame(X_test_ohe, columns=encoder_col_names)
    return X_train_ohe, X_test_ohe


# In[74]:


data.info()


# –£–¥–∞–ª—è–µ–º —Å—Ç–æ–ª–±—Ü—ã —Å –¥–∞—Ç–æ–π –∏ CustomerID, –æ–Ω–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ –ø–æ–≤–ª–∏—è—é—Ç –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π

# In[75]:


df = data.drop(['BeginDate', 'EndDate', 'CustomerID'], axis=1)


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# In[76]:


df.head(1)


# In[77]:


num_col_names = ['MonthlyCharges', 'TotalCharges', 'UseTime']
encoder_col_names = ['Type', 'PaperlessBilling', 'PaymentMethod',
                     'InternetService', 'OnlineSecurity',
                     'OnlineBackup', 'DeviceProtection',
                     'TechSupport', 'StreamingTV', 'StreamingMovies',
                     'MultipleLines', 'Gender', 'SeniorCitizen', 'Partner', 'Dependents']


# In[78]:


X = df.drop(['Sign'], axis=1)
y = df['Sign']


# In[79]:


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=RANDOM_STATE)


# In[80]:


display(X_train.shape)
display(X_test.shape)
display(y_train.shape)
display(y_test.shape)


# In[81]:


X_train_ohe, X_test_ohe = normal_encoder(X_train[encoder_col_names], X_test[encoder_col_names], encoder)


# In[82]:


#X_train_ohe = pd.get_dummies(X_train, drop_first=True)
#X_test_ohe = pd.get_dummies(X_test, drop_first=True)


# In[83]:


X_train_scaled, X_test_scaled = standard_scaler(X_train, X_test, num_col_names, scaler) 


# In[84]:


X_train = pd.concat([X_train_ohe, X_train_scaled], axis=1).reset_index(drop=True)
X_test = pd.concat([X_test_ohe, X_test_scaled], axis=1).reset_index(drop=True)


# In[85]:


display(X_train.shape)
display(X_test.shape)
display(y_train.shape)
display(y_test.shape)


# In[86]:


X_train.head(3)


# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
# </div>

# ### –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è

# #### –ú–æ–¥–µ–ª—å LogisticRegression

# In[87]:


get_ipython().run_cell_magic('time', '', "param_grid = {'C': [0.01, 0.1, 1, 10, 100]}\n\nmodel_lr = LogisticRegression(n_jobs=-1, random_state=RANDOM_STATE)\n\nsearch_lr = GridSearchCV(model_lr, param_grid, cv=3, scoring='roc_auc', verbose = False)\nsearch_lr.fit(X_train, y_train)\n\nprint('–õ—É—á—à–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', search_lr.best_params_)\nprint('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', search_lr.best_score_)")


# In[88]:


predict_lr = search_lr.best_estimator_.predict_proba(X_train)[:, 1]


# In[89]:


fpr, tpr, thresholds = roc_curve(y_train, predict_lr)  
plt.plot(fpr, tpr)     
plt.title("–ì—Ä–∞—Ñ–∏–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ FPR –æ—Ç TPR")
plt.xlabel('False Positive Rate (FPR)')
plt.ylabel('True Positive Rate (TPR)')
plt.show()


# –ú–µ—Ç—Ä–∏–∫–∞ ROC-AUC –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –≤—ã–±–æ—Ä–∫–µ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ 0.77

# #### –ú–æ–¥–µ–ª—å CatBoostClassifier

# In[90]:


model_cb = CatBoostClassifier(random_state = RANDOM_STATE)


# In[91]:


param_cb = {'depth':[5,10], 'learning_rate':np.arange(0.1,1,0.2)}


# In[92]:


grid_cb = GridSearchCV(estimator=model_cb, param_grid=param_cb, cv=3, scoring='roc_auc')


# In[93]:


get_ipython().run_cell_magic('time', '', 'grid_cb.fit(X_train, y_train)')


# In[94]:


pred_cb = grid_cb.best_estimator_.predict(X_train)


# In[95]:


print('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', grid_cb.best_score_)


# ### –í—ã–±–æ—Ä –ª—É—á—à–µ–π –º–æ–¥–µ–ª–∏

# –õ—É—á—à—É—é –º–µ—Ç—Ä–∏–∫—É –ø–æ–∫–∞–∑–∞–ª–∞ –º–æ–¥–µ–ª—å CatBoostClassifier, –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –õ—É—á—à–∞—è –º–æ–¥–µ–ª—å –≤—ã–±—Ä–∞–Ω–∞!
# </div>

# In[96]:


predict_cb = grid_cb.best_estimator_.predict_proba(X_test)[:, 1]


# In[97]:


print(f'–ú–µ—Ç—Ä–∏–∫–∞ ROC-AUC –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ: {round(roc_auc_score(y_test, predict_cb),3)}')


# In[98]:


fpr, tpr, thresholds = roc_curve(y_test, predict_cb)   
plt.plot(fpr, tpr)     
plt.title("–ì—Ä–∞—Ñ–∏–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ FPR –æ—Ç TPR")
plt.xlabel('False Positive Rate (FPR)')
plt.ylabel('True Positive Rate (TPR)')
plt.show()


# In[99]:


main_sign = pd.DataFrame(grid_cb.best_estimator_.feature_importances_, index = X_test.columns, columns=['MainSign'])
main_sign = main_sign.sort_values(by='MainSign', ascending=False)
main_sign.iloc[:10]


# –°–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤–ª–∏—è—é—â–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç - UseTime, TotalCharges, MonthlyCharges.

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# In[100]:


y_pred = grid_cb.best_estimator_.predict(X_test)


# In[101]:


cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize = (5,5))
plt.title("–ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫")
ax = sns.heatmap(cm, annot=True, fmt='d', cmap='Blues_r')
plt.xlabel('Predicted label')
plt.ylabel('True label');


# –∏—Å—Ç–∏–Ω–Ω–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π (TP) - 1471 \
# –∏—Å—Ç–∏–Ω–Ω–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π (TN) - 164 \
# –ª–æ–∂–Ω–æ–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (FP), –æ—à–∏–±–∫–∞ I —Ä–æ–¥–∞ - 21 \
# –ª–æ–∂–Ω–æ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (FN), –æ—à–∏–±–∫–∞ II —Ä–æ–¥–∞ 105 

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# ### –û–±—â–∏–π –≤—ã–≤–æ–¥ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∑–∞–∫–∞–∑—á–∏–∫—É

# –í –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –º—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–∏ –º–æ–¥–µ–ª—å –ø–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—é –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –ª–∏ –∫–ª–∏–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏ —Å–æ—Ç–æ–≤–æ–π —Å–≤—è–∑–∏ –∏–ª–∏ –Ω–µ—Ç. –ù–∞ –≤—Ö–æ–¥–µ –ø–æ–ª—É—á–∏–ª–∏ 4 –¥–∞—Ç–∞—Å–µ—Ç–∞ —Å –æ–±—â–∏–π –∫–ª—é—á–µ–≤—ã–º –ø–æ–ª–µ–º customerID. –î–∞–ª–µ–µ –ø—Ä–æ–¥–µ–ª–∞–ª–∏ —Å–ª–µ–¥—É—é—â—É—é —Ä–∞–±–æ—Ç—É: 
# * –ü—Ä–æ–≤–µ–ª–∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö: –ø—Ä–∏–≤–µ–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É PEP 8, –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∏, –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –¥—É–±–ª–∏–∫–∞—Ç—ã, –∏–∑–º–µ–Ω–∏–ª–∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–∫–∏–π –∞–Ω–∞–ª–∏–∑, –æ–±–æ–∑–Ω–∞—á–∏–ª–∏ –æ–±—â–∏–µ –≤—ã–≤–æ–¥—ã. 
# * –î–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü UseTime  —Å –æ–±—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∞–º–∏ —Å–≤—è–∑–∏, —É–≤–∏–¥–∏–ª–∏ —á—Ç–æ –æ–Ω –∏–º–µ–µ—Ç —Ö–æ—Ä–æ—à—É—é –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é —Å —Ü–µ–ª–µ–≤—ã–º –ø—Ä–∏–∑–Ω–∞–∫–æ–º –∏ —è–≤–ª—è–µ—Ç—Å—è —Ö–æ—Ä–æ—à–∏–º –ø—Ä–∏–∑–Ω–∞–∫–æ–º –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π.  
# * –û–±—ä–µ–¥–∏–Ω–∏–ª–∏ –≤—Å–µ –¥–∞—Ç–∞—Å–µ—Ç—ã –≤ –æ–±—â–∏–π, –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ 0. 
# * –ü–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π, —É–¥–∞–ª–∏–ª–∏ –ª–∏—à–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏. 
# * –û–±—É—á–∏–ª–∏ –¥–≤–µ –º–æ–¥–µ–ª–∏ —Å –ø–æ–¥–±–æ—Ä–æ–º –≥–∏–ø–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ - –ª–∏–Ω–µ–π–Ω—É—é –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ CatBoostClassifier.
# * –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞–∑–∞–ª–∞ –º–æ–¥–µ–ª—å CatBoostClassifier —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –º–µ—Ç—Ä–∏–∫–∏ ROC-AUC –≤ 90%

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –í—Å–µ –≤–µ—Ä–Ω–æ!
# </div>

# ### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–∂–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–∞—Ö

# In[102]:


col_main = ['UseTime', 'TotalCharges', 'MonthlyCharges', 'x0_Two year', 'x13_Yes', 'x0_One year', 'x5_Yes', 'x10_Yes', 'x1_Yes', 'x14_Yes']


# In[103]:


search_lr.fit(X_train[col_main], y_train)


# In[104]:


print('–õ—É—á—à–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', search_lr.best_params_)
print('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', search_lr.best_score_)


# In[105]:


get_ipython().run_cell_magic('time', '', 'grid_cb.fit(X_train[col_main], y_train)')


# In[106]:


pred_cb = grid_cb.best_estimator_.predict(X_train)
print('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', grid_cb.best_score_)


# –ù–∞ –º–æ–¥–µ–ª–∏ LogisticRegression –º–µ—Ç—Ä–∏–∫–∞ —Å—Ç–∞–ª–∞ —á—É—Ç—å —Ö—É–∂–µ, –Ω–æ –Ω–∞ Catboost —É–ª—É—á—à–∏–ª–∞—Å—å. –ò —Å—Ç–∞–ª–æ –Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ —Å—á–∏—Ç–∞—Ç—å!!!
# 
# –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∞—Ö –∏–∑ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏.

# In[107]:


X_train.head(1)


# In[108]:


col_main_corr = ['PaymentMethod', 
                 'Partner', 'OnlineSecurity', 
                 'OnlineBackup', 'DeviceProtection', 'StreamingTV', 'StreamingMovies', 'MultipleLines']


# In[109]:


num_col_names = ['MonthlyCharges', 'TotalCharges', 'UseTime']


# In[110]:


X = df.drop(['Sign'], axis=1)
y = df['Sign']


# In[111]:


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=RANDOM_STATE)


# In[112]:


X_train_ohe, X_test_ohe = normal_encoder(X_train[col_main_corr], X_test[col_main_corr], encoder)


# In[113]:


X_train_scaled, X_test_scaled = standard_scaler(X_train, X_test, num_col_names, scaler) 


# In[114]:


X_train = pd.concat([X_train_ohe, X_train_scaled], axis=1).reset_index(drop=True)
X_test = pd.concat([X_test_ohe, X_test_scaled], axis=1).reset_index(drop=True)


# In[115]:


X_train.head(2)


# In[116]:


search_lr.fit(X_train, y_train)


# In[117]:


print('–õ—É—á—à–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', search_lr.best_params_)
print('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', search_lr.best_score_)


# –º–µ—Ç—Ä–∏–∫–∞ LogisticRegression —Å—Ç–∞–ª–∞ –µ—â–µ —Ö—É–∂–µ.

# In[118]:


get_ipython().run_cell_magic('time', '', 'grid_cb.fit(X_train, y_train)')


# In[119]:


pred_cb = grid_cb.best_estimator_.predict(X_train)
print('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', grid_cb.best_score_)


# –ú–µ—Ç—Ä–∏–∫–∞ —Å—Ç–∞–ª–∞ —á—É—Ç—å —Ö—É–∂–µ, –Ω–æ –∑–∞—Ç–æ –±—ã—Å—Ç—Ä–µ–µ —Å—á–∏—Ç–∞–µ—Ç.

# –ü—Ä–∏ –ª—é–±–æ–º —Ä–∞—Å–∫–ª–∞–¥–µ –º–µ—Ç—Ä–∏–∫–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –µ—Å—Ç—å —Å–º—ã—Å–ª —ç–∫—Å–ø—Ä–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Å–Ω–∏–∂–µ–Ω–∏—é –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏.

# <div class="alert alert-success">
# <b>üëç –£—Å–ø–µ—Ö:</b> –ú–æ–ª–æ–¥–µ—Ü, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –°–∞–º–∞ —Ä–∞–±–æ—Ç–∞ –ø–æ–ª—É—á–∏–ª–∞—Å—å —Ö–æ—Ä–æ—à–µ–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π, –±—ã–ª–∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ, –≤—ã–±—Ä–∞–Ω —Ü–µ–ª–µ–≤–æ–π –ø—Ä–∏–∑–Ω–∞–∫, —Ä–∞—Å—Å—á–µ—Ç—ã –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π, —ç—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å —Ä–∞–±–æ—Ç—ã, –∫–æ—Ç–æ—Ä–∞—è –æ–±–ª–µ–≥—á–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª–Ω–µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–µ –≤ –¥–∞–Ω–Ω—ã—Ö. –ü–æ—Å—Ç—Ä–æ–µ–Ω–æ –∏ –æ–±—É—á–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π, –≤—Å–µ –æ–Ω–∏ –æ—Ü–µ–Ω–µ–Ω—ã –∏ –≤—ã–±—Ä–∞–Ω–∞ –ª—É—á—à–∞—è. –¶–µ–ª—å —Ä–∞–±–æ—Ç—ã –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞, –ø–æ–ª—É—á–µ–Ω–∞ –º–æ–¥–µ–ª—å —Ö–æ—Ä–æ—à–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—é—â–∞—è —É—Ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–æ–≤. –ù–µ –∑–∞–±—ã–≤–∞–π –æ —Ç–æ–º, —á—Ç–æ –≤—Å–µ –ø—É–Ω–∫—Ç—ã –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã –∏ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–∏—Ç —É–¥–µ–ª—è—Ç—å –º–∞–∫—Å–∏–º—É–º –≤–Ω–∏–º–∞–Ω–∏—è. <p>
# –° –æ–ø—ã—Ç–æ–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ª–µ–≥—á–µ, –Ω–æ –æ–ø—ã—Ç —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –æ–¥–Ω–∞–∂–¥—ã –∏–∑—É—á–µ–Ω–Ω–æ–≥–æ, –Ω–æ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ, —Ç–µ–º –±–æ–ª–µ–µ, —á—Ç–æ —Ç—ã –≤—ã–±—Ä–∞–ª –æ—á–µ–Ω—å –¥–∏–Ω–∞–º–∏—á–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—â—É—é—Å—è –æ–±–ª–∞—Å—Ç—å. <p>
# –í –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ —Ç–µ–±–µ —Ç–æ—á–Ω–æ –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è —É–º–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ —Ä–µ—à–µ–Ω–∏—é –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á, –∑–¥–µ—Å—å —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏–∑—É—á–∏—Ç—å –¢–†–ò–ó –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑, –∏–∑ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∏–Ω–∏–º—É–º –ø–æ Big Data ‚Äî –°—É –ö–µ–Ω–Ω–µ—Ç –∏ –´–Ω –ê–Ω–Ω–∞–ª–∏–Ω, –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ Data Science ‚Äî –ë—Ä—é—Å –ü. –∏ –ë—Ä—é—Å –≠., Real-World Machine Learning ‚Äî Henric Brink, Joseph –úark, W. Richards Fetherolf, –ü—Ä–∏–∫–ª–∞–¥–Ω–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é Scikit-Learn –∏ TensorFlow ‚Äî –ñ–µ—Ä–æ–Ω –û—Ä–µ–ª—å–µ–Ω.<p>
# –ï—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä https://vk.com/mashinnoe_obuchenie_ai_big_data) –∏ –∫–æ–Ω–µ—á–Ω–æ –∂–µ https://habr.com/ru/all/<p>
# 
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å:
# - –ö–Ω–∏–≥–∞ –æ—Ç –®–ê–î: https://academy.yandex.ru/handbook/ml
# 
# - –û—Ç–∫—Ä—ã—Ç—ã–π –∫—É—Ä—Å –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è: https://habr.com/ru/company/ods/blog/322626/
# 
#  –£–¥–∞—á–∏ —Ç–µ–±–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞!
# </div>

# In[ ]:




